{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a95173027d1cfdf79712","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./src/common/scss/common.scss","webpack:///Button.vue","webpack:///./src/button/button.scss","webpack:///./src/button/Button.vue?b519","webpack:///./src/button/Button.vue","webpack:///./src/button/buttonProps.js"],"names":["iconPropConfig","type","Object","String","propThemeConfig","default","validator","value","indexOf","size","theme","isAnimate","Boolean","isDisabled","icon","iconPosition","text","splitIcon","splitBtnText","splitBtnTheme","activeIcon","activeText","isActiveAtInit","style"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1FA,yC;;;;;;;;;;;;;;ACmBA;;AACA;;AAMA;;;;;;;AAEA;0BACA;;2BAGA;AAFA;AAGA;;;8CAEA;qDACA;AACA;8CACA;oCACA;AACA;sCACA;wDACA;4BACA;mBACA;4BACA;AACA;AACA;sCACA;wDACA;4BACA;mBACA;4BACA;AACA;AAEA;kDACA;oDACA;gBAEA;;sBACA;0BACA;uCAEA;;yDACA;oCACA;AAEA;;gEACA;AAEA;;mBACA;AAEA;4DACA;oDACA;gBAEA;;sBACA;0BACA;uCAEA;;qFACA;wDACA;AAEA;;gEACA;AAEA;;mBACA;AAEA;8DACA;oDACA;gBAEA;;sBACA;0BACA;uCAEA;;uEACA;AAEA;;mBACA;AAEA;kEACA;sEACA;wCACA;AAEA;oEACA;8CACA;AAGA;AAjFA;;;;AAmFA;;;sBAEA;2BAGA;AAJA;;+CAMA;AACA;iDACA;qBACA;kCAEA;;uCACA;gDACA;AACA;AACA;8DACA;sBACA;6CACA;;4BAGA;AAFA;AAIA;;yCACA;AAEA;;mBACA;AAEA;AA/BA;AAzFA;;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA,yC;;;;;;;ACAA,gBAAgB,mBAAmB,aAAa,0BAA0B;AAC1E;AACA,kCAAkC;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC,qB;;;;;;;ACjCD;AACA;AACA;AACA;AACA,wBAAuH;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;ACbA,IAAIA,iBAAiB;AACnBC,QAAM,CAACC,MAAD,EAASC,MAAT;AADa,CAArB;;AAIA,IAAIC,kBAAkB;AACpBH,QAAM,CAACE,MAAD,CADc;AAEpBE,WAAS,MAFW;AAGpBC,aAAW,mBAAUC,KAAV,EAAiB;AAC1B,WAAO,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0BC,OAA1B,CAAkCD,KAAlC,IAA2C,CAAC,CAAnD;AACD;AALmB,CAAtB;;kBAQe;AACb;;;AAGAN,QAAM;AACJA,UAAM,CAACE,MAAD,CADF;AAEJE,aAAS,OAFL;AAGJC,eAAW,mBAAUC,KAAV,EAAiB;AAC1B,aAAO,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6CC,OAA7C,CAAqDD,KAArD,IAA8D,CAAC,CAAtE;AACD;AALG,GAJO;AAWb;;;AAGAE,QAAM;AACJR,UAAM,CAACE,MAAD,CADF;AAEJE,aAAS;AAFL,GAdO;AAkBb;;;AAGAK,SAAON,eArBM;AAsBbO,aAAW;AACTV,UAAM,CAACW,OAAD,CADG;AAETP,aAAS;AAFA,GAtBE;AA0BbQ,cAAY;AACVZ,UAAM,CAACW,OAAD,CADI;AAEVP,aAAS;AAFC,GA1BC;AA8Bb;;;;;;AAMAS,QAAM;AACJb,UAAM,CAACC,MAAD,EAASC,MAAT;AADF,GApCO;AAuCb;;;;;;AAMAY,gBAAc;AACZd,UAAM,CAACE,MAAD;AADM,GA7CD;AAgDb;;;AAGAa,QAAM;AACJf,UAAM,CAACE,MAAD;AADF,GAnDO;AAsDb;;;AAGAc,aAAW;AACThB,UAAM,CAACC,MAAD,EAASC,MAAT;AADG,GAzDE;AA4Db;;;AAGAe,gBAAc;AACZjB,UAAM,CAACE,MAAD;AADM,GA/DD;AAkEb;;;AAGAgB,iBAAe;AACblB,UAAM,CAACE,MAAD,CADO;AAEbG,eAAW,mBAAUC,KAAV,EAAiB;AAC1B,aAAO,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0BC,OAA1B,CAAkCD,KAAlC,IAA2C,CAAC,CAAnD;AACD;AAJY,GArEF;AA2Eb;;;AAGAa,cAAY;AACVnB,UAAM,CAACC,MAAD,EAASC,MAAT;AADI,GA9EC;AAiFb;;;AAGAkB,cAAY;AACVpB,UAAM,CAACE,MAAD;AADI,GApFC;AAuFbmB,kBAAgB;AACdrB,UAAM,CAACW,OAAD,CADQ;AAEdP,aAAS;AAFK,GAvFH;AA2FbkB,SAAO;AACLtB,UAAM,CAACE,MAAD,CADD;AAELE,aAAS;AAFJ;AA3FM,C","file":"Button.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Button\"] = factory();\n\telse\n\t\troot[\"LMUI\"] = root[\"LMUI\"] || {}, root[\"LMUI\"][\"Button\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 49);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a95173027d1cfdf79712","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = 0\n// module chunks = 0 1 2 3 4 5 6 7 8 9","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/scss/common.scss\n// module id = 1\n// module chunks = 0 1 2 3 4 5 6 7 8 9","<template>\n    <div :style=\"'display:inline-block;' + style\">\n        <button :disabled=\"isDisabled\" @click=\"onClickButton\" :class=\"'lm-button ' + (isActive ? 'active ' : ' ') + type + '-button ' + theme +\n        ' ' + size + ' ' + (isAnimate ? 'animate ' : ' ') + (type=='split' ? 'split-left ' : '')\">\n            <svg :class=\"'icons' + realIcon.size + ' icon-' + realIcon.theme\" v-if=\"realIcon && realIcon.id && normalizedIconPosition =='left'\"><use :xlink:href=\"'#' + realIcon.id\"></use></svg>\n            <slot v-if=\"!isIconPassed || !isTextPassed\"></slot>\n            <template v-if=\"isTextPassed\">\n                {{realText}}\n            </template>\n            <svg :class=\"'icons' + realIcon.size +  ' icon-' + realIcon.theme\" v-if=\"realIcon && realIcon.id && normalizedIconPosition =='right'\"><use :xlink:href=\"'#' + realIcon.id\"></use></svg>\n        </button>\n        <button v-if=\"type == 'split'\" :class=\"'lm-button split-right ' + normalizedSplitBtnTheme + ' ' + (isAnimate ? 'animate' : '')\">\n            <svg :class=\"'icons' + normalizedSplitIcon.size + ' icon-' + normalizedSplitIcon.theme\" v-if=\"normalizedSplitIcon && normalizedSplitIcon.id\"><use :xlink:href=\"'#' + normalizedSplitIcon.id\"></use></svg>\n            {{splitBtnText}}\n        </button>\n    </div>\n</template>\n\n<script>\n    import '../common/scss/common.scss';\n    import './button.scss';\n\n    // vue loader can't export anything except default\n\n    import props from './buttonProps';\n\n    export default {\n        props: props,\n        data() {\n            return {\n              isActive: this.isActiveAtInit\n            };\n        },\n        computed: {\n            isIconPassed() {\n                return !!(this.realIcon && this.realIcon.id);\n            },\n            isTextPassed() {\n                return this.realText != undefined;\n            },\n            realIcon() {\n                if (this.type == 'toggle' && this.isActive) {\n                    return this.normalizedActiveIcon;\n                } else {\n                    return this.normalizedIcon;\n                }\n            },\n            realText() {\n                if (this.type == 'toggle' && this.isActive) {\n                    return this.activeText;\n                } else {\n                    return this.text;\n                }\n            },\n\n            normalizedIcon() {\n                var icon = this._getNormalizedIcon(this.icon);\n                var retIcon;\n\n                if (icon) {\n                    retIcon = {};\n                    Object.assign(retIcon, icon);\n\n                    if (!icon.theme && this.theme == 'blue') {\n                        retIcon.theme = 'white';\n                    }\n\n                    retIcon.theme = this.transformIconColor(retIcon.theme);\n                }\n\n                return retIcon;\n            },\n\n            normalizedSplitIcon() {\n                var icon = this._getNormalizedIcon(this.splitIcon);\n                var retIcon;\n\n                if (icon) {\n                    retIcon = {};\n                    Object.assign(retIcon, icon);\n\n                    if (!icon.theme && this.normalizedIcon && this.normalizedIcon.theme) {\n                        retIcon.theme = this.normalizedIcon.theme;\n                    }\n\n                    retIcon.theme = this.transformIconColor(retIcon.theme);\n                }\n\n                return retIcon;\n            },\n\n            normalizedActiveIcon() {\n                var icon = this._getNormalizedIcon(this.activeIcon);\n                var retIcon;\n\n                if (icon) {\n                    retIcon = {};\n                    Object.assign(retIcon, icon);\n\n                    retIcon.theme = this.transformIconColor(retIcon.theme, 'white');\n                }\n\n                return retIcon;\n            },\n\n            normalizedIconPosition() {\n                var defaultIconPosition = this.type == 'menu' ? 'right' : 'left';\n                return this.iconPosition || defaultIconPosition;\n            },\n\n            normalizedSplitBtnTheme() {\n                return this.splitBtnTheme || this.theme;\n            }\n        },\n\n        methods: {\n            transformIconColor(color, defaultColor = 'gray') {\n                let colorMap = {\n                    blue: 'primary1',\n                    lightGray: 'light-gray'\n                };\n\n                return colorMap[color] || color || defaultColor;\n\n            },\n            onClickButton(e) {\n                var me = this;\n                this.isActive = !this.isActive;\n\n                this.$nextTick(function () {\n                    me.$emit('toggle', me.isActive, this);\n                });\n            },\n            _getNormalizedIcon(icon) {\n                if (icon) {\n                    if (typeof icon == 'string') {\n                        icon = {\n                            id: icon\n                        };\n                    }\n\n                    icon.size = icon.size || 18;\n                }\n\n                return icon;\n            }\n        }\n    };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// Button.vue?25085980","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/button/button.scss\n// module id = 13\n// module chunks = 0 1 4 5 8","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    style: ('display:inline-block;' + _vm.style)\n  }, [_c('button', {\n    class: 'lm-button ' + (_vm.isActive ? 'active ' : ' ') + _vm.type + '-button ' + _vm.theme +\n      ' ' + _vm.size + ' ' + (_vm.isAnimate ? 'animate ' : ' ') + (_vm.type == 'split' ? 'split-left ' : ''),\n    attrs: {\n      \"disabled\": _vm.isDisabled\n    },\n    on: {\n      \"click\": _vm.onClickButton\n    }\n  }, [(_vm.realIcon && _vm.realIcon.id && _vm.normalizedIconPosition == 'left') ? _c('svg', {\n    class: 'icons' + _vm.realIcon.size + ' icon-' + _vm.realIcon.theme\n  }, [_c('use', {\n    attrs: {\n      \"xlink:href\": '#' + _vm.realIcon.id\n    }\n  })]) : _vm._e(), _vm._v(\" \"), (!_vm.isIconPassed || !_vm.isTextPassed) ? _vm._t(\"default\") : _vm._e(), _vm._v(\" \"), (_vm.isTextPassed) ? [_vm._v(\"\\n            \" + _vm._s(_vm.realText) + \"\\n        \")] : _vm._e(), _vm._v(\" \"), (_vm.realIcon && _vm.realIcon.id && _vm.normalizedIconPosition == 'right') ? _c('svg', {\n    class: 'icons' + _vm.realIcon.size + ' icon-' + _vm.realIcon.theme\n  }, [_c('use', {\n    attrs: {\n      \"xlink:href\": '#' + _vm.realIcon.id\n    }\n  })]) : _vm._e()], 2), _vm._v(\" \"), (_vm.type == 'split') ? _c('button', {\n    class: 'lm-button split-right ' + _vm.normalizedSplitBtnTheme + ' ' + (_vm.isAnimate ? 'animate' : '')\n  }, [(_vm.normalizedSplitIcon && _vm.normalizedSplitIcon.id) ? _c('svg', {\n    class: 'icons' + _vm.normalizedSplitIcon.size + ' icon-' + _vm.normalizedSplitIcon.theme\n  }, [_c('use', {\n    attrs: {\n      \"xlink:href\": '#' + _vm.normalizedSplitIcon.id\n    }\n  })]) : _vm._e(), _vm._v(\"\\n        \" + _vm._s(_vm.splitBtnText) + \"\\n    \")]) : _vm._e()])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1a611b46\",\"hasScoped\":false}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/button/Button.vue\n// module id = 14\n// module chunks = 0 1 4 5 8","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Button.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1a611b46\\\",\\\"hasScoped\\\":false}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Button.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/button/Button.vue\n// module id = 4\n// module chunks = 0 1 4 5 8","var iconPropConfig = {\n  type: [Object, String]\n};\n\nvar propThemeConfig = {\n  type: [String],\n  default: 'gray',\n  validator: function (value) {\n    return ['blue', 'gray', 'white'].indexOf(value) > -1;\n  }\n};\n\nexport default {\n  /**\n   * define the button type the type can be plain, icon, split, menu and toggle buttons\n   */\n  type: {\n    type: [String],\n    default: 'plain',\n    validator: function (value) {\n      return ['plain', 'icon', 'split', 'menu', 'toggle'].indexOf(value) > -1;\n    }\n  },\n  /**\n   * define button size, the type can be empty, small, small-small\n   */\n  size: {\n    type: [String],\n    default: ''\n  },\n  /**\n   * define the theme of the button, the theme can be gray, blue and white\n   */\n  theme: propThemeConfig,\n  isAnimate: {\n    type: [Boolean],\n    default: true\n  },\n  isDisabled: {\n    type: [Boolean],\n    default: false\n  },\n  /**\n   * Specify the icon of the button\n   * example:\n   * icon=\"icon-settings\"\n   * icon=\"{size: 26, theme: 'gray', id: 'icon-lookup-26'}\"\n   */\n  icon: {\n    type: [Object, String]\n  },\n  /**\n   * iconPosition means the position of the icon relative to the button text\n   * example:\n   * icon-position=\"left\"\n   * icon-position=\"right\"\n   */\n  iconPosition: {\n    type: [String]\n  },\n  /**\n   * Define the button text\n   */\n  text: {\n    type: [String]\n  },\n  /**\n   * Specify the split icon for the split buttons, the config style is the same with the icon\n   */\n  splitIcon: {\n    type: [Object, String]\n  },\n  /**\n   * Specify the button text of the split button\n   */\n  splitBtnText: {\n    type: [String]\n  },\n  /**\n   * Specify the theme of the split button\n   */\n  splitBtnTheme: {\n    type: [String],\n    validator: function (value) {\n      return ['blue', 'gray', 'white'].indexOf(value) > -1;\n    }\n  },\n  /**\n   * Specify the icon of the toggle button in active status\n   */\n  activeIcon: {\n    type: [Object, String]\n  },\n  /**\n   * Specify the text of the toggle button in active status\n   */\n  activeText: {\n    type: [String]\n  },\n  isActiveAtInit: {\n    type: [Boolean],\n    default: false\n  },\n  style: {\n    type: [String],\n    default: ''\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/button/buttonProps.js"],"sourceRoot":""}