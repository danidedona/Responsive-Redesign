(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("jquery"));
	else if(typeof define === 'function' && define.amd)
		define(["jquery"], factory);
	else if(typeof exports === 'object')
		exports["Dropdown"] = factory(require("jquery"));
	else
		root["LMUI"] = root["LMUI"] || {}, root["LMUI"]["Dropdown"] = factory(root["$"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 50);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

/* globals __VUE_SSR_CONTEXT__ */

// this module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = injectStyles
  }

  if (hook) {
    var functional = options.functional
    var existing = functional
      ? options.render
      : options.beforeCreate
    if (!functional) {
      // inject component registration as beforeCreate hook
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    } else {
      // register for functioal component in vue file
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return existing(h, context)
      }
    }
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 1:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 17:
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(21),
  /* template */
  __webpack_require__(23),
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)

module.exports = Component.exports


/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),

/***/ 21:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function($) {

Object.defineProperty(exports, "__esModule", {
    value: true
});

__webpack_require__(1);

__webpack_require__(22);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var Dropdown = {
    /**
     *  we can use two named slots to specify the dropdown and triggerEl like this:
     *   <span slot="dropdown">
             <ul>
                 <li data-target="menu1">menu111111111111111111</li>
                 <li data-target="menu2">menu2</li>
                 <li data-target="menu3">menu3</li>
             </ul>
         </span>
          <span slot="triggerEl">
            Click me to show dropdown
         </span>
      *    Or we can use only one slot for triggerEl, user menuItems to specify the dropdown content.
     */

    props: {
        /**
         * User menu data to render dropdown menu
         * the format of menuItems is like:
         *  [
                {iconName:'opsNote', data: 'abc-data', text: 'Manage'}, // with icon, data(will be passed to callback), and text, iconSize can be used as props for render menuItem
                {iconName:'share', text: 'Ops', data: 'abc-data', iconSize:'26'}, // with iconSize, it's '18' as default.
                {}, // split line
                {data: 'abc-data', text: 'Manage'}, // without icon, has data and text
                {text: 'Ops', data: 'abc-data'}
            ]
         */
        menuItems: {
            type: [Array]
        },

        /**
         * Add inline helper attr to dom
         * the format of inlineHelper is like:
         * {
         *      title: 'title'
         * }
         * default return : {}
         */
        inlineHelper: {
            type: [Object],
            default: function _default() {
                return {};
            }
        },

        /**
         * sometime this will be handy to specify the min width of the dropdown menu, if you use menuItems to render the dropdown
         */
        menuMinWidth: {
            type: [Number]
        },

        /**
         * Determine where to append the dropdown element, if not specified, if will be append to document.body
         * it should be a selector string
         */
        dropdownAppendTo: {
            type: [String]
        },

        /*
        Determine if the dropdown is in combineMode
         */
        combineMode: {
            type: [Boolean],
            default: false
        },

        /*
        Determine the dropdown align position,
        it can be 'auto', 'left', 'right'
         */
        position: {
            type: [String],
            default: 'auto',
            validator: function validator(value) {
                return ['auto', 'left', 'right'].indexOf(value) > -1;
            }
        },

        /*
        The callback which will be executed after the dropdown item is selected
        the callback will have two args which are targetData and the selected item dom element
         */
        onSelectItem: {
            type: [Function],
            default: function _default() {
                return function (targetData, el) {
                    console.log(targetData, el);
                };
            }
        }
    },
    data: function data() {
        return {
            isActive: false
        };
    },
    'mounted': function mounted() {
        var me = this;
        this.$nextTick(function () {
            this._toggleOffMenu = function (e) {
                var el = $(e.target).closest('.lmui-dropdown')[0];
                if (el === me.$el) {
                    return;
                }
                this.isActive = false;
            }.bind(this);

            this.$dropdownWrapper = $(this.$el).find('.dropdown-wrapper');
            this.$dropdownBarrier = $(this.$el).find('.dropdown-barrier');

            $(document).on('click', this._toggleOffMenu);

            // santaba dropdown component use this to handle dropdown close,
            // we need to do this to listen to old dropdown
            $(document).on('click.outside', this._toggleOffMenu);
        });
    },
    'beforeDestroy': function beforeDestroy() {
        $(document).off('click', this._toggleOffMenu);
        $(document).off('click.outside', this._toggleOffMenu);
        delete this._toggleOffMenu;
        this.$dropdownWrapper.remove();
        this.$dropdownBarrier.remove();
    },
    watch: {
        'isActive': function isActive(_isActive) {
            if (!_isActive) {
                this.$dropdownWrapper.hide();
                this.$dropdownWrapper.insertAfter(this.$el);
                this.$dropdownBarrier.insertAfter(this.$el);
            }
        }
    },
    methods: {
        triggerElOnClick: function triggerElOnClick() {
            var me = this;
            // allow the user to config some common behaviors for all instances of the the Dropdown
            if (Dropdown.afterTriggerElClicked) {
                // because of the staggered delay is 100ms, here we use 150ms delay for trigger the class level events
                setTimeout(function () {
                    Dropdown.afterTriggerElClicked(me);
                }, 150);
            }

            this.isActive = !this.isActive;

            if (this.isActive) {
                this._resetPosition(function () {
                    me.$dropdownWrapper.slideDown(100);
                    var browser = navigator.userAgent;
                    //fixed ie11 svg disapper bug;
                    if (browser.indexOf("rv:11.0") > 0 && me.menuItems) {
                        if (!me.cacheItems) {
                            me.cacheItems = [];
                            me.$dropdownWrapper.find("a").each(function () {
                                me.cacheItems.push($(this).html());
                            });
                        }
                        me.$dropdownWrapper.find("a").each(function (index) {
                            $(this).html(me.cacheItems[index]);
                        });
                    }
                });
            } else {
                this.$dropdownWrapper.hide();
            }
        },

        _onSelectMenuItem: function _onSelectMenuItem(e) {
            var $target = $(e.target);
            var targetData = $target.attr('data-target') || $target.parents('li').attr('data-target');
            this.isActive = false;
            this.onSelectItem(targetData, e.target);
        },

        _resetPosition: function _resetPosition(cb) {
            this.$nextTick(function () {
                var $triggerEl = $(this.$el).find('.dropdown-trigger');
                var $dropdownEl = this.$dropdownWrapper;
                var $dropdownBarrier = this.$dropdownBarrier;
                var triggerOffset = $triggerEl.offset();
                var triggerWidth = $triggerEl.outerWidth() || 0;
                var triggerHeight = $triggerEl.outerHeight() || 0;
                var dropdownWidth = $dropdownEl.outerWidth() || 0;

                var left = void 0;
                switch (this.position) {
                    case 'right':
                        {
                            left = triggerOffset.left + triggerWidth - dropdownWidth;
                            break;
                        }
                    case 'left':
                        {
                            left = triggerOffset.left;
                            break;
                        }
                    case 'auto':
                        {
                            // check the triggerEl's position
                            if ($triggerEl.position().left < dropdownWidth + 50) {
                                left = triggerOffset.left;
                            } else {
                                left = triggerOffset.left + triggerWidth - dropdownWidth;
                            }
                        }
                }

                //jQuery.offset method have bug for "display:none" element
                $dropdownEl.show();
                $dropdownEl.offset({ top: triggerOffset.top + triggerHeight + 10, left: left });
                $dropdownEl.hide();

                if (this.combineMode) {
                    $dropdownBarrier.offset({
                        top: triggerOffset.top + triggerHeight, left: triggerOffset.left
                    });
                    // need to decrease 2px border width
                    $dropdownBarrier.width($triggerEl.outerWidth() - 2);
                }

                if (!this.dropdownAppendTo) {
                    $dropdownBarrier.appendTo(document.body);
                    $dropdownEl.appendTo(document.body);
                } else {
                    $dropdownBarrier.appendTo(this.dropdownAppendTo);
                    $dropdownEl.appendTo(this.dropdownAppendTo);
                }
                cb();
            });
        }
    }
};

exports.default = Dropdown;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),

/***/ 22:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 23:
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "lmui-dropdown"
  }, [_c('span', {
    staticClass: "dropdown-trigger",
    class: {
      'at-combine-mode': _vm.combineMode && _vm.isActive, 'combine-mode': _vm.combineMode
    },
    on: {
      "click": _vm.triggerElOnClick
    }
  }, [_vm._t("triggerEl")], 2), _vm._v(" "), (_vm.combineMode) ? _c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isActive),
      expression: "isActive"
    }],
    staticClass: "lmui-dropdown-partial dropdown-barrier"
  }) : _vm._e(), _vm._v(" "), (!_vm.menuItems) ? _c('span', {
    staticClass: "lmui-dropdown-partial dropdown-wrapper",
    class: {
      'combine-mode': _vm.combineMode
    },
    on: {
      "click": _vm._onSelectMenuItem
    }
  }, [_vm._t("dropdown")], 2) : _c('span', {
    staticClass: "lmui-dropdown-partial dropdown-wrapper",
    class: {
      'combine-mode': _vm.combineMode
    },
    on: {
      "click": _vm._onSelectMenuItem
    }
  }, [_c('ul', {
    staticClass: "lmui-dropwn-partial dropdown-menu",
    style: ({
      minWidth: _vm.menuMinWidth + 'px'
    }),
    attrs: {
      "inline-help-title": _vm.inlineHelper.title
    }
  }, [_vm._l((_vm.menuItems), function(menuItem, index) {
    return [(!menuItem.data) ? _c('li', {
      staticStyle: {
        "border-top": "1px #959494 solid"
      }
    }) : _c('li', {
      attrs: {
        "data-target": menuItem.data
      }
    }, [_c('a', {
      attrs: {
        "href": "javascript:;",
        "helper-label-name": menuItem.inlineHelperLabelName
      }
    }, [(menuItem.iconName) ? _c('svg', {
      class: 'icon-' + menuItem.iconName + ' icon-gray' + ' icons' + (menuItem.iconSize || 18),
      attrs: {
        "title": menuItem.title ? menuItem.title : menuItem.iconName
      }
    }, [_c('use', {
      attrs: {
        "xlink:href": '#icon-' + menuItem.iconName
      }
    })]) : _vm._e(), _vm._v("\n                            " + _vm._s(menuItem.text) + "\n                     ")])])]
  })], 2)])])
},staticRenderFns: []}

/***/ }),

/***/ 50:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(17);


/***/ })

/******/ });
});
//# sourceMappingURL=Dropdown.js.map